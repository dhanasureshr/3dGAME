 using System.Collections;
using System.Collections.Generic;
using UnityEngine;


public class playerjoymovement : ExtendedCustomMonoBehavior
{
	// this is paramaters section
    #region player movement paramaters
    // this are for the player movement with joustick without animations
    public tuch_inpu touch_input_script;
	public PLAYER_CAMERA_FOLLOW player_camera_follow_script;
    [TextArea]
	public string var = "should be attatched to the player";
	public float speed;
	public Vector3 MoveDirection = Vector3.zero;
	public VirtualJoystick joystickinputforplayermovement;
	public float h_joy;
	public float y_joy;
	public CharacterController playercharactercontroller;
	private float x_touch_input;
	private float init_touch_x;
	private float finals_touch_x;
	private float plyer_rot_x;
	public  float rotate_speed = 5.0f;
	private Vector3 playerrotatevector = Vector3.zero;
	public Transform camera_pos;
	public Vector3 MoveVector { set; get; }
    #endregion

    #region player_movement animation paramaters
    // these are animation paramaters for player basic movement
    public Animator player_animator;
	private static int horthash = Animator.StringToHash("X");
	private static int verthash = Animator.StringToHash("Y");
	#endregion
    // this is for game functions
    #region start for player coimponent references
    private void Start()
	{
		playercharactercontroller = GetComponent<CharacterController>();
		player_animator = GetComponent<Animator>();
		//playercharactercontroller = GetComponentInChildren<CharacterController>();
	}
    #endregion

    #region player movement updater

    private void Update()
	{
		


		/// this code is for the player movement with camera at back
		/// --------------------------------------------------------
		h_joy = joystickinputforplayermovement.InputDirection.x;
		y_joy = joystickinputforplayermovement.InputDirection.z;
		float yStore = MoveDirection.y;

		///////=========================================================
		///we should enable this comented code when we want our camera to follow at
		/// the back of the player
		/// 
		//code no 1
		//MoveDirection = (transform.forward * h_joy) + (-transform.right * y_joy);
		//////==========================================================

		// at a time there should be only one to be enabled either 
		// the above comented code or below comented code
		// not both at a time if you do so error will be generated by
		// default the i have enabled 
		// camer free from playe code...............................

		//////==========================================================
		///we should enable this comented code when  we want our camera to 
		///be free from player 
		// code no 2

		// calculate camera relative direction to move:
		//tempVEC = Vector3.Scale(camera_pos.forward, new Vector3(1, 0, 1)).normalized;
		//MoveDirection = y_joy * tempVEC  + h_joy * camera_pos.right;

		MoveDirection = new Vector3(-y_joy, 0, h_joy);///////////////////////////////////////////////////
		MoveDirection = transform.TransformDirection(MoveDirection);/////////////////////////////////////
		/////===========================================================

		MoveDirection = MoveDirection * speed;
		//MoveDirection.y = yStore;
		MoveDirection += Physics.gravity;
		
		playercharactercontroller.Move(MoveDirection * Time.deltaTime);
		///-----------------------------------------------------------
		player_animator.SetFloat(horthash, h_joy,0.1f,Time.deltaTime);
		player_animator.SetFloat(verthash, y_joy,0.1f,Time.deltaTime);
		
	}

    #endregion



}